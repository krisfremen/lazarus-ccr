#
# Declaration of classes:
# [ClassName] Parent Interface1 Interface2
# declarations of fields, contructors, methods, consts, etc
#
# For Interfaces:
# {InterfaceName} Parent1 Parent2 Parent3
#

#[MenuItem] TJavaObject
#classcallback MenuItem.OnMenuItemClickListener boolean onMenuItemClick (MenuItem item)
#method MenuItem setOnMenuItemClickListener (MenuItem.OnMenuItemClickListener menuItemClickListener)
#
#[Menu] TJavaObject
#method MenuItem 	add(int groupId, int itemId, int order, CharSequence title)

#
# android.util.*
#
[DisplayMetrics] TJavaObject
constructor Create()
field float density
field int densityDpi
field int heightPixels
field float scaledDensity
field int widthPixels
field float xdpi
field float ydpi

#
# android.app.*
#
[Display] TJavaObject
method void getMetrics(DisplayMetrics outMetrics)

[WindowManager] TJavaObject
method Display getDefaultDisplay()

#
# android.view
#
[ViewGroup.LayoutParams] TJavaObject
constructor Create(int width, int height);
const FILL_PARENT = $FFFFFFFF;
const MATCH_PARENT = $FFFFFFFF;
const WRAP_CONTENT = $FFFFFFFE;

[View] TJavaObject
method void setLayoutParams(ViewGroup.LayoutParams params);
method void setVisibility(int visibility);
const VISIBLE = 0;
const INVISIBLE = 4;
const GONE = 8;

[ViewGroup] View
method void addView(View child, ViewGroup.LayoutParams params);
# method void addView(View child);

[LinearLayout] ViewGroup
constructor Create(Activity);
method void setOrientation(int orientation);
const HORIZONTAL = 0;
const VERTICAL = 1;

[AbsoluteLayout] ViewGroup
constructor Create(Activity);

[AbsoluteLayout.LayoutParams] ViewGroup.LayoutParams
constructor Create(int param_width, int param_height, int param_x, int param_y);

[TextView] View
constructor Create(Activity); virtual;
method void setText(CharSequence AText); virtual;
callbacksettercaller setOnClickListener callOnClickListener OnClickListener = procedure (v: TView) of object;
method void setTextSize(int unit_; float size);

[EditText] TextView
constructor Create(Activity); override;
method void setText(CharSequence AText); override;

[Button] TextView
constructor Create(Activity); override;
method void setText(CharSequence AText); override;

[FrameLayout] ViewGroup

[TimePicker] FrameLayout
constructor Create(Activity);
method int getCurrentHour();
method void setCurrentHour(int currentHour);
method int getCurrentMinute;
method void setCurrentMinute(int currentMinute);
method boolean is24HourView;
method void setIs24HourView(boolean AIs24HourView);

[ScrollView] FrameLayout
constructor Create(Activity);

[CompoundButton] Button
#constructor Create(Activity) abstract
method boolean 	isChecked() 
method boolean 	performClick() 
method void 	setChecked(boolean checked) 
#method void 	setOnCheckedChangeListener(CompoundButton.OnCheckedChangeListener listener) 
method void 	toggle() 

[CheckBox] CompoundButton
constructor Create(Activity)

[AdapterView] ViewGroup

[AbsSpinner] AdapterView
# SpinnerAdapter getAdapter()
method int getCount()
# View 	getSelectedView()
# void 	onRestoreInstanceState(Parcelable state)
# Parcelable 	onSaveInstanceState()
# int 	pointToPosition(int x, int y)
# void 	requestLayout()
method void setAdapter(SpinnerAdapter adapter)
# void 	setSelection(int position, boolean animate)
# void 	setSelection(int position)

[Spinner] AbsSpinner
constructor Create(Activity);

#
# For info about the Adapter of a spinner see:
# http://stackoverflow.com/questions/2784081/android-create-spinner-programmatically-from-array
#
{Filterable}

{Adapter}

{ListAdapter} Adapter

{SpinnerAdapter} Adapter

# android.widget.BaseAdapter
[BaseAdapter] TJavaObject ListAdapter SpinnerAdapter

# android.widget.ArrayAdapter<T>
[ArrayAdapter<String>] BaseAdapter Filterable
constructor Create(Activity, int textViewResourceId)
method void add(String aobject)

#
# android.R.layout
#
[layout] TJavaObject
const activity_list_item = $01090000;
const browser_link_context_header = $0109000e;
const expandable_list_content = $01090001;
const list_content = $01090014;
const preference_category = $01090002;
const select_dialog_item = $01090011;
const select_dialog_multichoice = $01090013;
const select_dialog_singlechoice = $01090012;
const simple_dropdown_item_1line = $0109000a;
const simple_expandable_list_item_1 = $01090006;
const simple_expandable_list_item_2 = $01090007;
const simple_gallery_item = $0109000b;
const simple_list_item_1 = $01090003;
const simple_list_item_2 = $01090004;
const simple_list_item_activated_1 = $01090016;
const simple_list_item_activated_2 = $01090017;
const simple_list_item_checked = $01090005;
const simple_list_item_multiple_choice = $01090010;
const simple_list_item_single_choice = $0109000f;
const simple_selectable_list_item = $01090015;
const simple_spinner_dropdown_item = $01090009;
const simple_spinner_item = $01090008;
const test_list_item = $0109000c;
const two_line_list_item = $0109000d;


