#
# Declaration of classes:
# [ClassName] Parent Interface1 Interface2
# declarations of fields, contructors, methods, consts, etc
#
# For Classes which are only used through a global object:
# %ClassName%ObjectName% Parent Interface1 Interface2
#
# For Interfaces:
# {InterfaceName} Parent1 Parent2 Parent3
#

#[MenuItem] TJavaObject
#classcallback MenuItem.OnMenuItemClickListener boolean onMenuItemClick (MenuItem item)
#method MenuItem setOnMenuItemClickListener (MenuItem.OnMenuItemClickListener menuItemClickListener)
#
#[Menu] TJavaObject
#method MenuItem 	add(int groupId, int itemId, int order, CharSequence title)

#
# android.util.*
#
[DisplayMetrics] TJavaObject
constructor Create(); override;
field float density
field int densityDpi
field int heightPixels
field float scaledDensity
field int widthPixels
field float xdpi
field float ydpi

#
# android.content.*
#
{DialogInterface}
type DialogInterface.OnClickListener = void onClick(DialogInterface dialog, int which)
const BUTTON_NEGATIVE = $fffffffe;
const BUTTON_NEUTRAL = $fffffffd;
const BUTTON_POSITIVE = $ffffffff;

#
# android.app.*
#
%Activity%activity% TJavaObject
method void setTitle(CharSequence title)
method CharSequence getTitle()

[Display] TJavaObject
method void getMetrics(DisplayMetrics outMetrics)

[WindowManager] TJavaObject
method Display getDefaultDisplay()

[Dialog] TJavaObject
#void 	addContentView(View view, ViewGroup.LayoutParams params)
#void 	cancel()
#void 	closeOptionsMenu()
#void 	dismiss()
#boolean 	dispatchGenericMotionEvent(MotionEvent ev)
#boolean 	dispatchKeyEvent(KeyEvent event)
#boolean 	dispatchKeyShortcutEvent(KeyEvent event)
#boolean 	dispatchPopulateAccessibilityEvent(AccessibilityEvent event)
#boolean 	dispatchTouchEvent(MotionEvent ev)
#boolean 	dispatchTrackballEvent(MotionEvent ev)
#View 	findViewById(int id)
#ActionBar 	getActionBar()
#final Context 	getContext()
#View 	getCurrentFocus()
#LayoutInflater 	getLayoutInflater()
#final Activity 	getOwnerActivity()
#final int 	getVolumeControlStream()
#Window 	getWindow()
#void 	hide()
#void 	invalidateOptionsMenu()
#boolean 	isShowing()
#void 	onActionModeFinished(ActionMode mode)
#void 	onActionModeStarted(ActionMode mode)
#void 	onAttachedToWindow()
#void 	onBackPressed()
#void 	onContentChanged()
#boolean 	onContextItemSelected(MenuItem item)
#void 	onContextMenuClosed(Menu menu)
#void 	onCreateContextMenu(ContextMenu menu, View v, ContextMenu.ContextMenuInfo menuInfo)
#boolean 	onCreateOptionsMenu(Menu menu)
#boolean 	onCreatePanelMenu(int featureId, Menu menu)
#View 	onCreatePanelView(int featureId)
#void 	onDetachedFromWindow()
#boolean 	onGenericMotionEvent(MotionEvent event)
#boolean 	onKeyDown(int keyCode, KeyEvent event)
#boolean 	onKeyLongPress(int keyCode, KeyEvent event)
#boolean 	onKeyMultiple(int keyCode, int repeatCount, KeyEvent event)
#boolean 	onKeyShortcut(int keyCode, KeyEvent event)
#boolean 	onKeyUp(int keyCode, KeyEvent event)
#boolean 	onMenuItemSelected(int featureId, MenuItem item)
#boolean 	onMenuOpened(int featureId, Menu menu)
#boolean 	onOptionsItemSelected(MenuItem item)
#void 	onOptionsMenuClosed(Menu menu)
#void 	onPanelClosed(int featureId, Menu menu)
#boolean 	onPrepareOptionsMenu(Menu menu)
#boolean 	onPreparePanel(int featureId, View view, Menu menu)
#void 	onRestoreInstanceState(Bundle savedInstanceState)
#Bundle 	onSaveInstanceState()
#boolean 	onSearchRequested()
#boolean 	onTouchEvent(MotionEvent event)
#boolean 	onTrackballEvent(MotionEvent event)
#void 	onWindowAttributesChanged(WindowManager.LayoutParams params)
#void 	onWindowFocusChanged(boolean hasFocus)
#ActionMode 	onWindowStartingActionMode(ActionMode.Callback callback)
#void 	openContextMenu(View view)
#void 	openOptionsMenu()
#void 	registerForContextMenu(View view)
#final boolean 	requestWindowFeature(int featureId)
#void 	setCancelMessage(Message msg)
#void 	setCancelable(boolean flag)
#void 	setCanceledOnTouchOutside(boolean cancel)
#void 	setContentView(View view)
#void 	setContentView(int layoutResID)
#void 	setContentView(View view, ViewGroup.LayoutParams params)
#void 	setDismissMessage(Message msg)
#final void 	setFeatureDrawable(int featureId, Drawable drawable)
#final void 	setFeatureDrawableAlpha(int featureId, int alpha)
#final void 	setFeatureDrawableResource(int featureId, int resId)
#final void 	setFeatureDrawableUri(int featureId, Uri uri)
#void 	setOnCancelListener(DialogInterface.OnCancelListener listener)
#void 	setOnDismissListener(DialogInterface.OnDismissListener listener)
#void 	setOnKeyListener(DialogInterface.OnKeyListener onKeyListener)
#void 	setOnShowListener(DialogInterface.OnShowListener listener)
#final void 	setOwnerActivity(Activity activity)
#void 	setTitle(int titleId)
#void 	setTitle(CharSequence title)
#final void 	setVolumeControlStream(int streamType)
method void show()
#void 	takeKeyEvents(boolean get)
#void 	unregisterForContextMenu(View view)

[AlertDialog] Dialog
const THEME_HOLO_DARK = $00000002;
const THEME_HOLO_LIGHT = $00000003;
const THEME_TRADITIONAL = $00000001;
# Button 	getButton(int whichButton)
# ListView 	getListView()
# boolean 	onKeyDown(int keyCode, KeyEvent event)
# boolean 	onKeyUp(int keyCode, KeyEvent event)
# void 	setButton(CharSequence text, Message msg)
callbacksetter void 	setButton(int whichButton, CharSequence text, $DialogInterface.OnClickListener listener)
# void 	setButton(CharSequence text, DialogInterface.OnClickListener listener)
# void 	setButton(int whichButton, CharSequence text, Message msg)
# void 	setButton2(CharSequence text, DialogInterface.OnClickListener listener)
# void 	setButton2(CharSequence text, Message msg)
# void 	setButton3(CharSequence text, DialogInterface.OnClickListener listener)
# void 	setButton3(CharSequence text, Message msg)
# void 	setCustomTitle(View customTitleView)
#void 	setIcon(Drawable icon)
#void 	setIcon(int resId)
#void 	setIconAttribute(int attrId)
# void 	setInverseBackgroundForced(boolean forceInverseBackground)
method void setMessage(CharSequence message)
method void setTitle(CharSequence title)
#void 	setView(View view, int viewSpacingLeft, int viewSpacingTop, int viewSpacingRight, int viewSpacingBottom)
method void setView(View view)

[AlertDialog.Builder] TJavaObject
constructor Create(Activity); override;
method AlertDialog create ()
#public Context getContext ()
#public AlertDialog.Builder setAdapter (ListAdapter adapter, DialogInterface.OnClickListener listener)
#public AlertDialog.Builder setCancelable (boolean cancelable)
#public AlertDialog.Builder setCursor (Cursor cursor, DialogInterface.OnClickListener listener, String labelColumn)
#public AlertDialog.Builder setCustomTitle (View customTitleView)
#public AlertDialog.Builder setIcon (Drawable icon)
#public AlertDialog.Builder setIcon (int iconId)
#public AlertDialog.Builder setIconAttribute (int attrId)
#public AlertDialog.Builder setInverseBackgroundForced (boolean useInverseBackground)
#public AlertDialog.Builder setItems (int itemsId, DialogInterface.OnClickListener listener)
#public AlertDialog.Builder setItems (CharSequence[] items, DialogInterface.OnClickListener listener)
method AlertDialog.Builder setMessage (CharSequence message)
#public AlertDialog.Builder setMessage (int messageId)
#public AlertDialog.Builder setMultiChoiceItems (CharSequence[] items, boolean[] checkedItems, DialogInterface.OnMultiChoiceClickListener listener)
#public AlertDialog.Builder setMultiChoiceItems (Cursor cursor, String isCheckedColumn, String labelColumn, DialogInterface.OnMultiChoiceClickListener listener)
#public AlertDialog.Builder setNegativeButton (CharSequence text, DialogInterface.OnClickListener listener)
#public AlertDialog.Builder setNeutralButton (int textId, DialogInterface.OnClickListener listener)
#public AlertDialog.Builder setNeutralButton (CharSequence text, DialogInterface.OnClickListener listener)
#public AlertDialog.Builder setOnCancelListener (DialogInterface.OnCancelListener onCancelListener)
#public AlertDialog.Builder setOnItemSelectedListener (AdapterView.OnItemSelectedListener listener)
#public AlertDialog.Builder setOnKeyListener (DialogInterface.OnKeyListener onKeyListener)
#public AlertDialog.Builder setPositiveButton (int textId, DialogInterface.OnClickListener listener)
#public AlertDialog.Builder setPositiveButton (CharSequence text, DialogInterface.OnClickListener listener)
#callbacksetter AlertDialog.Builder setPositiveButton (CharSequence text, $DialogInterface.OnClickListener listener)
#public AlertDialog.Builder setSingleChoiceItems (CharSequence[] items, int checkedItem, DialogInterface.OnClickListener listener)
#public AlertDialog.Builder setSingleChoiceItems (ListAdapter adapter, int checkedItem, DialogInterface.OnClickListener listener)
#public AlertDialog.Builder setSingleChoiceItems (int itemsId, int checkedItem, DialogInterface.OnClickListener listener)
#public AlertDialog.Builder setSingleChoiceItems (Cursor cursor, int checkedItem, String labelColumn, DialogInterface.OnClickListener listener)
method AlertDialog.Builder setTitle (CharSequence title)
#public AlertDialog.Builder setTitle (int titleId)
method AlertDialog.Builder setView (View view)
method AlertDialog show ()

#
# android.view
#
[ViewGroup.LayoutParams] TJavaObject
constructor Create(int width, int height);
const FILL_PARENT = $FFFFFFFF;
const MATCH_PARENT = $FFFFFFFF;
const WRAP_CONTENT = $FFFFFFFE;

[View] TJavaObject
method void setLayoutParams(ViewGroup.LayoutParams params);
method void setVisibility(int visibility);
const VISIBLE = 0;
const INVISIBLE = 4;
const GONE = 8;

[ViewGroup] View
method void addView(View child, int aindex, ViewGroup.LayoutParams params); overload;
method void addView(View child, ViewGroup.LayoutParams params); overload;
method void addView(View child, int aindex); overload;
method void addView(View child); overload;
method void addView(View child, int width, int height); overload;
type View.OnClickListener = void onClick(View v)

[LinearLayout] ViewGroup
constructor Create(Activity); override;
method void setOrientation(int orientation);
const HORIZONTAL = 0;
const VERTICAL = 1;

[AbsoluteLayout] ViewGroup
constructor Create(Activity); override;

[AbsoluteLayout.LayoutParams] ViewGroup.LayoutParams
constructor Create(int param_width, int param_height, int param_x, int param_y);

[TextView] View
constructor Create(Activity); override;
method void setText(CharSequence AText);
callbacksetter void setOnClickListener($View.OnClickListener l)
method void setTextSize(int unit_; float size);
method CharSequence getText()

[EditText] TextView
constructor Create(Activity); override;

[Button] TextView
constructor Create(Activity); override;

[FrameLayout] ViewGroup

[TimePicker] FrameLayout
constructor Create(Activity); override;
method int getCurrentHour();
method void setCurrentHour(int currentHour);
method int getCurrentMinute;
method void setCurrentMinute(int currentMinute);
method boolean is24HourView;
method void setIs24HourView(boolean AIs24HourView);

[ScrollView] FrameLayout
constructor Create(Activity); override;

[CompoundButton] Button
#constructor Create(Activity) abstract
method boolean 	isChecked() 
method boolean 	performClick() 
method void 	setChecked(boolean checked) 
#method void 	setOnCheckedChangeListener(CompoundButton.OnCheckedChangeListener listener) 
method void 	toggle() 

[CheckBox] CompoundButton
constructor Create(Activity); override;

[AdapterView] ViewGroup
method int getSelectedItemPosition()

[AbsSpinner] AdapterView
# SpinnerAdapter getAdapter()
method int getCount()
# View 	getSelectedView()
# void 	onRestoreInstanceState(Parcelable state)
# Parcelable 	onSaveInstanceState()
# int 	pointToPosition(int x, int y)
# void 	requestLayout()
method void setAdapter(SpinnerAdapter adapter)
methodo void setSelection(int position, boolean animate); overload;
method void setSelection(int position); overload;

[Spinner] AbsSpinner
constructor Create(Activity); override;

#
# For info about the Adapter of a spinner see:
# http://stackoverflow.com/questions/2784081/android-create-spinner-programmatically-from-array
#
{Filterable}

{Adapter}

{ListAdapter} Adapter

{SpinnerAdapter} Adapter

# android.widget.BaseAdapter
[BaseAdapter] TJavaObject ListAdapter SpinnerAdapter

# android.widget.ArrayAdapter<T>
[ArrayAdapter<String>] BaseAdapter Filterable
constructor Create(Activity, int textViewResourceId)
method void add(String aobject)
method void clear()
method void insert(String aobject, int aindex)
method void remove(String aobject)

#
# android.R.layout
#
[layout] TJavaObject
const activity_list_item = $01090000;
const browser_link_context_header = $0109000e;
const expandable_list_content = $01090001;
const list_content = $01090014;
const preference_category = $01090002;
const select_dialog_item = $01090011;
const select_dialog_multichoice = $01090013;
const select_dialog_singlechoice = $01090012;
const simple_dropdown_item_1line = $0109000a;
const simple_expandable_list_item_1 = $01090006;
const simple_expandable_list_item_2 = $01090007;
const simple_gallery_item = $0109000b;
const simple_list_item_1 = $01090003;
const simple_list_item_2 = $01090004;
const simple_list_item_activated_1 = $01090016;
const simple_list_item_activated_2 = $01090017;
const simple_list_item_checked = $01090005;
const simple_list_item_multiple_choice = $01090010;
const simple_list_item_single_choice = $0109000f;
const simple_selectable_list_item = $01090015;
const simple_spinner_dropdown_item = $01090009;
const simple_spinner_item = $01090008;
const test_list_item = $0109000c;
const two_line_list_item = $0109000d;


